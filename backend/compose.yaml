name: careerpilot-backend

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: careerpilot-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: careerpilot
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: .
    image: careerpilot-backend:latest
    container_name: careerpilot-api
    env_file:
      - .env.local
    environment:
      # App
      # GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      MODEL_NAME: ${MODEL_NAME:-gemini-2.5-flash}
      TEMPERATURE: ${TEMPERATURE:-0.0}
      # DB (service name db resolves via Docker DNS)
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/careerpilot
      PGVECTOR_ENABLED: "true"

    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    working_dir: /app
    command:
      [
        "uv",
        "run",
        "uvicorn",
        "app.main:app",
        "--app-dir",
        "src",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
      ]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  db-init:
    image: careerpilot-backend:latest
    container_name: careerpilot-db-init
    depends_on:
      api:
        condition: service_started
      db:
        condition: service_healthy
    env_file:
      - .env.local
    working_dir: /app
    environment:
      PYTHONPATH: /app/src
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/careerpilot
      PGVECTOR_ENABLED: "true"
    command:
      ["uv", "run", "python", "-m", "app.infrastructure.database.init_db"]

volumes:
  postgres_data:
