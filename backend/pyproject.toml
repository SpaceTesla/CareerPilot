[project]
name = "backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.118.0",
    "google-generativeai>=0.8.5",
    "httpx>=0.28.1",
    "langchain>=0.3.27",
    "langchain-google-genai>=2.0.10",
    "langgraph>=0.6.8",
    "pydantic[email]>=2.11.10",
    "pydantic-settings>=2.11.0",
    "python-dotenv>=1.1.1",
    "uvicorn[standard]>=0.37.0",
    "sse-starlette>=2.2.1",
    "pymupdf>=1.26.5",
    "pymupdf4llm>=0.0.27",
    "python-multipart>=0.0.20",
    "sqlalchemy>=2.0.43",
    "psycopg2-binary>=2.9.11",
    "pgvector>=0.4.1",
    "alembic>=1.17.0",
    "duckduckgo-search>=8.1.1",
    "langchain-community>=0.3.31",
    "ddgs>=9.6.1",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[tool.ruff.lint]
# Enable comprehensive rule set following industry standards
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[dependency-groups]
dev = ["ruff>=0.8.0"]
